---
- hosts: all
  become: true
  vars_files:
    - vars/main.yml
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ apt_packages }}"
      state: present
      update_cache: yes

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ docker_packages }}"
      state: present
      update_cache: yes
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ kube_packages }}"
      state: present
      update_cache: yes

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16

  - name: Create folder for Kube config
    file:
      path: /home/vagrant/.kube
      owner: vagrant
      group: vagrant
      state: directory

  - name: Setup Kube config for vagrant user
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      remote_src: yes

  - name: Install calico pod network
    become: false
    command: kubectl create -f https://docs.projectcalico.org/v3.14/getting-started/kubernetes/installation/hosted/calico.yaml

  - name: Install helm from snap
    snap:
      name: helm
      classic: yes

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Save join command to a file on the local machine
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest=join-command
    become: false

  handlers:
  - name: docker status
    service:
      name: docker
      state: started
